knitr::opts_chunk$set(echo = TRUE)
library("swirl")
library("UsingR")
library("tidyverse")
## Step 3: Setting up the ast dataset and merge them together.
neo
## Step 1: Importing the original dataset.
ast <- read_csv("Dataset/Asteroid Dataset.csv")
## Step 1: Importing the original dataset.
ast <- read_csv("Dataset/Asteroid Dataset.csv")
neo <- read_csv("Dataset/Near Earth Objects.csv")
## Step 2: Tidying the NEO dataset and applying basic analysis to it.
neo <- neo %>%
select(id:miss_distance,absolute_magnitude, hazardous) %>%
mutate(est_diameter = (est_diameter_min+est_diameter_max)/2) %>%
select(id, name, est_diameter, relative_velocity:hazardous) %>%
select(id, name, miss_distance, est_diameter, relative_velocity, absolute_magnitude, hazardous)
## Step 3: Setting up the ast dataset and merge them together.
``
## Step 3: Setting up the ast dataset and merge them together.
neo
ast
ast <- ast %?%
select(spkid, full_name, neo:albedo)
ast <- ast %>%
select(spkid, full_name, neo:albedo)
ast
ast <- ast %>%
select(spkid, full_name, neo:albedo) %>%
rename(id = spkid)
ast
## Step 3: Setting up the ast dataset and merge them together.
neo
ast
## Step 3: Setting up the ast dataset and merge them together.
neo
ast
ast %>%
select(id, full_name, neo, pha, H, albedo)
neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = id)
neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id")
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") %>%
select(id:absolute_magnitude, albedo)
dat
dat %>%
filter(!is.na(albedo))
lm(miss_distance ~ est_diameter)
lm(miss_distance ~ est_diameter, data = dat)
lm(miss_distance ~ est_diameter, data = dat)$summary
summary(lm(miss_distance ~ est_diameter, data = dat))
dat
summary(lm(miss_distance ~ est_diameter + relative_velocity + absolute_magnitude, data = dat))
lm(formula = miss_distance ~ est_diameter)
lm(formula = miss_distance ~ est_diameter, data = dat)
summary(lm(formula = miss_distance ~ est_diameter, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity, data = dat))
summary(lm(formula = miss_distance ~ absolute_magnitude, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity + absolute_magnitude, data = dat))
dat
dat_ <- dat %>%
filter(!is.na(albedo))
dat_
lm(miss_distance ~ albedo, data = dat_)
summary(lm(miss_distance ~ albedo, data = dat_))
dat
summary(lm(formula = miss_distance ~ relative_velocity + absolute_magnitude, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity + 1, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity, data = dat))
summary(lm(formula = miss_distance ~ absolute_magnitude, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity, data = dat))
absolute_magnitude
summary(lm(formula = miss_distance ~ absolute_magnitude, data = dat))
summary(lm(formula = miss_distance ~ estimated_diameter, data = dat))
summary(lm(formula = miss_distance ~ estimated_diameter, data = dat))
dat
summary(lm(formula = miss_distance ~ est_diameter, data = dat))
summary(lm(formula = miss_distance ~ relative_velocity + absolute_magnitude + est_diameter, data = dat))
## Step 1: Find out the correlation
dat
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") ##%>%
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") ##%>%
ast
select(ast, id, full_name, neo, pha, H, albedo)
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") %>%
select(id:absolute_magnitude, albedo)
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") %>%
select(id:absolute_magnitude, albedo)
dat
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id")## %>%
dat
dat <- neo %>%
left_join(select(ast, id, full_name, neo, pha, H, albedo), by = "id") %>%
select(id:absolute_magnitude, albedo, hazardous, neo:pha)
dat
dat %>%
filter(pha == "Y")
dat %>%
filter(pha == "Y") %>%
arrange(desc(miss_didstance))
dat %>%
filter(pha == "Y") %>%
arrange(desc(miss_distance))
dat %>%
arrange(desc(miss_distance))
dat %>%
filter(pha == "Y") %>%
arrange(desc(miss_distance))
dat %>%
filter(pha == "Y") %>%
arrange(desc(miss_distance))
dat %>%
mutate(est_dis = 236.5*relative_velocity - 1.384*1000000*absolute_magnitude - 8.082*100000*est_diameter + 5.844*10000000)
dat %>%
mutate(est_dis = 236.5*relative_velocity - 1.384*1000000*absolute_magnitude - 8.082*100000*est_diameter + 5.844*10000000) %>%
select(miss_distance, est_dis)
dat %>%
mutate(est_dis = 236.5*relative_velocity - 1.384*1000000*absolute_magnitude - 8.082*100000*est_diameter + 5.844*10000000) %>%
select(miss_distance, est_dis) %>%
ggplot() +
geom_point(aes(x = miss_distance, y = est_dis))
?geom_line
dat %>%
mutate(est_dis = 236.5*relative_velocity - 1.384*1000000*absolute_magnitude - 8.082*100000*est_diameter + 5.844*10000000) %>%
select(miss_distance, est_dis) %>%
ggplot() +
geom_point(aes(x = miss_distance, y = est_dis)) +
geom_line(method = "lm")
dat %>%
mutate(est_dis = 236.5*relative_velocity - 1.384*1000000*absolute_magnitude - 8.082*100000*est_diameter + 5.844*10000000) %>%
select(miss_distance, est_dis) %>%
ggplot() +
geom_point(aes(x = miss_distance, y = est_dis)) +
geom_abline(position = "identity")
knitr::opts_chunk$set(echo = TRUE)
library("swirl")
library("UsingR")
library("tidyverse")
full_dat %>%
mutate(est_missing_distance = 2.017e+09 - 6.605e+05*est_diameter + 5.034e+02*relative_velocity - 1.204e+06*absolute_magnitude - 2.751e+03*epoch + 1.954e+02*epoch_cal  - 8.942e+06*e - 1.245e+07*a + 3.035e+07*q - 5.703e+05*i + 8.012e+01*om - 7.867e+02*w + 6.202e+02*ma + 1.271e+07*n + 7.173e+02*tp - 4.631e+01*tp_cal + 4.577e+03*per + 8.379e+07*moid + sigma_e*1.185e+07 - 2.169e+07*sigma_a + 4.272e+05*sigma_q + 2.263e+05*sigma_i - 1.542e+05*sigma_om - 9.313e+04*sigma_w + 2.071e+05*sigma_ma + 1.998e+07*sigma_ad - 5.096e+07*sigma_n - 1.073e+05*sigma_tp - 9.480e+03*sigma_per + 3.078e+03*rms) %>%
select(id, miss_distance, est_missing_distance) %>%
mutate(residual = -est_missing_distance + miss_distance) %>%
ggplot(aes(x = miss_distance, y = residual)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", size = 2)
knitr::opts_chunk$set(echo = TRUE)
library("swirl")
library("UsingR")
library("tidyverse")
## Step 1: Importing the original dataset.
ast <- read_csv("Dataset/Asteroid Dataset.csv")
neo <- read_csv("Dataset/Near Earth Objects.csv")
## Step 2: Tidying the NEO dataset and applying basic analysis to it.
neo <- neo %>%
select(id:miss_distance,absolute_magnitude, hazardous) %>%
mutate(est_diameter = (est_diameter_min+est_diameter_max)/2) %>%
select(id, name, est_diameter, relative_velocity:hazardous) %>%
select(id, name, miss_distance, est_diameter, relative_velocity, absolute_magnitude, hazardous)
lm(miss_distance ~ est_diameter + relative_velocity + absolute_magnitude, data = neo)
knitr::opts_chunk$set(echo = TRUE)
library("swirl")
library("UsingR")
library("tidyverse")
## Step 1: Importing the original dataset.
ast <- read_csv("Dataset/Asteroid Dataset.csv")
neo <- read_csv("Dataset/Near Earth Objects.csv")
## Step 2: Tidying the NEO dataset and applying basic analysis to it.
neo <- neo %>%
select(id:miss_distance,absolute_magnitude, hazardous) %>%
mutate(est_diameter = (est_diameter_min+est_diameter_max)/2) %>%
select(id, name, est_diameter, relative_velocity:hazardous) %>%
select(id, name, miss_distance, est_diameter, relative_velocity, absolute_magnitude, hazardous)
ast_dat <- ast %>%
select(spkid, diameter:rms) %>%
rename(id = spkid)
full_dat <- neo %>%
left_join(ast_dat, by = "id") %>%
filter(!is.na(orbit_id))
full_dat %>%
mutate(est_missing_distance = 2.017e+09 - 6.605e+05*est_diameter + 5.034e+02*relative_velocity - 1.204e+06*absolute_magnitude - 2.751e+03*epoch + 1.954e+02*epoch_cal  - 8.942e+06*e - 1.245e+07*a + 3.035e+07*q - 5.703e+05*i + 8.012e+01*om - 7.867e+02*w + 6.202e+02*ma + 1.271e+07*n + 7.173e+02*tp - 4.631e+01*tp_cal + 4.577e+03*per + 8.379e+07*moid + sigma_e*1.185e+07 - 2.169e+07*sigma_a + 4.272e+05*sigma_q + 2.263e+05*sigma_i - 1.542e+05*sigma_om - 9.313e+04*sigma_w + 2.071e+05*sigma_ma + 1.998e+07*sigma_ad - 5.096e+07*sigma_n - 1.073e+05*sigma_tp - 9.480e+03*sigma_per + 3.078e+03*rms) %>%
select(id, miss_distance, est_missing_distance) %>%
mutate(residual = -est_missing_distance + miss_distance) %>%
ggplot(aes(x = miss_distance, y = residual)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", size = 2)
full_dat %>%
mutate(est_missing_distance = 2.017e+09 - 6.605e+05*est_diameter + 5.034e+02*relative_velocity - 1.204e+06*absolute_magnitude - 2.751e+03*epoch + 1.954e+02*epoch_cal  - 8.942e+06*e - 1.245e+07*a + 3.035e+07*q - 5.703e+05*i + 8.012e+01*om - 7.867e+02*w + 6.202e+02*ma + 1.271e+07*n + 7.173e+02*tp - 4.631e+01*tp_cal + 4.577e+03*per + 8.379e+07*moid + sigma_e*1.185e+07 - 2.169e+07*sigma_a + 4.272e+05*sigma_q + 2.263e+05*sigma_i - 1.542e+05*sigma_om - 9.313e+04*sigma_w + 2.071e+05*sigma_ma + 1.998e+07*sigma_ad - 5.096e+07*sigma_n - 1.073e+05*sigma_tp - 9.480e+03*sigma_per + 3.078e+03*rms) %>%
select(id, miss_distance, est_missing_distance) %>%
mutate(residual = -est_missing_distance + miss_distance) %>%
ggplot(aes(x = miss_distance, y = residual)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", size = 1)
neo
mean(neo$est_diameter)
mean(neo$absolute_magnitude)
mean(neo$relative_velocity)
